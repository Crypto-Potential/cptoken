var instance; QCPToken.deployed().then( function ( inst) { instance = inst});
var buyToken; TradingQCP.deployed().then( function ( inst) { buyToken = inst});
buyToken.setPrices(web3.toWei(0.09), web3.toWei(0.1), {from: web3.eth.accounts[0]});
buyToken.buy({from: web3.eth.accounts[1], value: web3.toWei(1)});
-- fails
instance.setTransferAgent(TradingQCP.address, true, {from: web3.eth.accounts[0]});
buyToken.buy({from: web3.eth.accounts[1], value: web3.toWei(1)});
-- works

instance.balanceOf(TradingQCP.address);
instance.balanceOf(web3.eth.accounts[1]);

instance.getTokenBalance();
instance.balanceOf(web3.eth.accounts[2]);
instance.transfer(web3.eth.accounts[2], web3.toWei(0.00000000000000001), {from:web3.eth.accounts[1]})
--fails
instance.transfer(web3.eth.accounts[2], web3.toWei(0.00000000000000001), {from:web3.eth.accounts[0]})
-- works
instance.getTokenBalance();
instance.balanceOf(web3.eth.accounts[2]);

instance.setVestableAddress(web3.eth.accounts[2], true);

buyToken.sell(web3.toWei(1), {from: web3.eth.accounts[1]})

instance.transferFrom(web3.eth.accounts[2], web3.eth.accounts[3], 10, {from: buyToken.address})

https://truffleframework.com/tutorials/debugging-a-smart-contract
truffle develop --log
truffle develop
migrate --reset

buyToken.sell(5, {from: web3.eth.accounts[1]}) ---- doesnt works as of now
instance.approve(buyToken.address, 5, {from: web3.eth.accounts[1]})

instance.releaseTokenTransfer();
instance.transfer(web3.eth.accounts[2], web3.toWei(0.00000000000000001), {from:web3.eth.accounts[1]})
--- works
instance.transfer(web3.eth.accounts[2], web3.toWei(0.00000000000000001), {from:web3.eth.accounts[2]})
--- fails
instance.setVestableAddress(web3.eth.accounts[2], false);
instance.transfer(web3.eth.accounts[2], web3.toWei(0.00000000000000001), {from:web3.eth.accounts[2]})
--works